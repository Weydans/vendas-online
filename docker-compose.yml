version: "3.9"

networks:
  lan-webapp:
    driver: bridge
  lan-api:
    driver: bridge
  lan-db:
    driver: bridge

services:
  
  webserver:
    container_name: webserver
    build:
      context: ./webserver
    restart: unless-stopped
    volumes:
      - ./api/:/var/www/
    ports:
      - 8000:80
    networks:
      - lan-webapp
      - lan-api
    depends_on:
      - webapp
      - api

  webapp:
    container_name: webapp
    build:
      context: ./webapp
    restart: unless-stopped
    volumes:
      - ./webapp/:/app/
    command: sh -c "npm i && npm run dev -- --host --port 3000"
    networks:
      - lan-webapp
    depends_on:
      - api

  api:
    container_name: api
    build:
      args:
        user: ${USER}
        uid: 1000
      context: ./api
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./api/:/var/www/
    networks:
      - lan-api
      - lan-db
    depends_on:
      - db
  
  db:
    image: mysql:5.7.42
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 3306:3306
    volumes:
      - ./.data:/var/lib/mysql
    networks:
      - lan-db